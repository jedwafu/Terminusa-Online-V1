[pytest]
# Test discovery and collection
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts =
    # Show detailed test progress
    -v
    # Show local variables in tracebacks
    -l
    # Show extra test summary info
    -ra
    # Generate coverage reports
    --cov=.
    --cov-report=html:test-reports/coverage
    --cov-report=xml:test-reports/coverage.xml
    # Generate test reports
    --html=test-reports/report.html
    --self-contained-html
    # Fail if coverage is below 80%
    --cov-fail-under=80
    # Show slowest tests
    --durations=10
    # Run doctests
    --doctest-modules
    # Disable warnings during test collection
    --disable-warnings
    # Stop after first failure
    --maxfail=1
    # Show local variables in tracebacks
    --showlocals

# Environment variables
env =
    FLASK_ENV=testing
    FLASK_DEBUG=0
    DATABASE_URL=postgresql://postgres:postgres@localhost:5432/terminusa_test
    REDIS_URL=redis://localhost:6379/1
    TESTING=true

# Coverage configuration
[coverage:run]
branch = True
source = .
omit =
    tests/*
    venv/*
    setup.py
    conftest.py
    */migrations/*
    */static/*
    */templates/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    if TYPE_CHECKING:

# Logging configuration
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    web: marks tests as web tests
    db: marks tests as database tests
    auth: marks tests as authentication tests
    game: marks tests as game logic tests
    ai: marks tests as AI-related tests
    currency: marks tests as currency-related tests
    combat: marks tests as combat-related tests
    social: marks tests as social feature tests

# Fixtures
usefixtures =
    db
    client
    app

# Test directories to ignore
norecursedirs =
    .*
    build
    dist
    CVS
    _darcs
    {arch}
    *.egg
    venv
    node_modules

# Files to ignore
ignore = setup.py

# Custom test selection options
addopts =
    # Run only unit tests
    --unit: -m unit
    # Run only integration tests
    --integration: -m integration
    # Run only API tests
    --api: -m api
    # Run only web tests
    --web: -m web
    # Run only database tests
    --db: -m db
    # Run only game logic tests
    --game: -m game
    # Run only AI tests
    --ai: -m ai
    # Run only currency tests
    --currency: -m currency
    # Run only combat tests
    --combat: -m combat
    # Run only social tests
    --social: -m social
